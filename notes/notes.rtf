{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1) rename initial view to content view\
\
2) create a QuestionManager class\
3) in the init of the class, the levels.json is decoded\
4) in the navigation link to game view, set an environmentObject of the questionManager \
5) in the GameView(), there should then be an @EnvironmentObject var of type questionManager \
\
2) inside content view, set a @Stateobject var that initialises QuestionManager()\
\
____\
\
The GameView should not know anything like pitches/duartion etc\'85 cos these might not always be there. It should just know: what is the question to display? It doesn\'92t even need to know the answer, the manager will figure out if they got it wrong. \
\
___\
\
Is it better to use observed object on the question view? \
\
}